Window_Character_access = {

	scope = character

	saved_scopes = { 
   target 
} 		# any additional targets
	is_valid = {} 		# can the player use it?

	effect = {			# what it does
	debug_log = "<CharacterWindow>"
	debug_log = "<out>[THIS.Char.GetNameNoTooltip] is [THIS.Char.GetAge] years old and has an id of [THIS.Char.GetID]</out>"


debug_log = " <stats> <Diplomacy> [THIS.Char.MakeScope.ScriptValue('debug_diplo')] </Diplomacy> <Martial> [THIS.Char.MakeScope.ScriptValue('debug_martial')] </Martial> <Stewardship> [THIS.Char.MakeScope.ScriptValue('debug_stew')] </Stewardship> <Intrigue> [THIS.Char.MakeScope.ScriptValue('debug_int')] </Intrigue> <Learning> [THIS.Char.MakeScope.ScriptValue('debug_learn')] </Learning> </stats>"
debug_log = "<Dread>[THIS.Char.GetDread] </Dread> <dread_breakdown> [THIS.Char.GetDreadBreakdown] </dread_breakdown>"
debug_log = "<Prowess>[THIS.Char.GetProwess] </Prowess> <prowess_breakdown> [THIS.Char.GetProwessBreakdown] </prowess_breakdown>"

ordered_held_title = {
debug_log = "<title>"
max = 100
#order_by = position
debug_log = "<cka_title>[THIS.Title.GetNameNoTooltip]</cka_title>"
debug_log = "<cka_heirs>"
ordered_title_heir = {
max = 5
debug_log = "<heir>[THIS.Char.GetNameNoTooltip]</heir>"
check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max
}
debug_log = "</cka_heirs>"
check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max
debug_log = "</title>"
}

ordered_claim = {
debug_log = "<cka_claims>"
max = 100
debug_log = "<claim> [THIS.Title.GetNameNoTooltip] </claim>"
check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max
debug_log = "</cka_claims>"
}


#debug_log = "[THIS.Char.GetTraitIndices]"
set_variable = { 
   name = education 
value = scope:target
}

		debug_log = "<traits> [THIS.Var('education').GetFlagName]</traits>"

	debug_log = "<consorts>"

			if = {
		limit = {
			is_married = yes
		}
		debug_log = "<primary><char><name>[THIS.Char.GetPrimarySpouse.GetNameNoTooltip]</name><gender>[THIS.Char.GetPrimarySpouse.GetSheHe]</gender><age>[THIS.Char.GetPrimarySpouse.GetAge]</age><health>[THIS.Char.GetPrimarySpouse.GetHealth]</health><faith>[THIS.Char.GetPrimarySpouse.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetPrimarySpouse.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetPrimarySpouse.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetPrimarySpouse.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>1</marital_status><player_relation>[THIS.Char.GetPrimarySpouse.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetPrimarySpouse.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetPrimarySpouse.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><selected_relation>[THIS.Char.GetPrimarySpouse.GetRelationToStringExtended(THIS.Char)]</selected_relation><selected_opinion>[THIS.Char.GetPrimarySpouse.GetOpinionOf(THIS.Char)]</selected_opinion><selected_opinion_breakdown>[THIS.Char.GetPrimarySpouse.GetOpinionBreakdownText(THIS.Char)]</selected_opinion_breakdown><id>[THIS.Char.GetPrimarySpouse.GetID]</id></char></primary>"
	}
			if = {
		limit = {
			is_betrothed = yes
				}
		debug_log = "<betrothed><char><name>[THIS.Char.GetBetrothed.GetNameNoTooltip]</name><gender>[THIS.Char.GetBetrothed.GetSheHe]</gender><age>[THIS.Char.GetBetrothed.GetAge]</age><health>[THIS.Char.GetBetrothed.GetHealth]</health><faith>[THIS.Char.GetBetrothed.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetBetrothed.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetBetrothed.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetBetrothed.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>1</marital_status><player_relation>[THIS.Char.GetBetrothed.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetBetrothed.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetBetrothed.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><relation>[THIS.Char.GetBetrothed.GetRelationToStringExtended(THIS.Char)]</relation><opinion>[THIS.Char.GetBetrothed.GetOpinionOf(THIS.Char)]</opinion><opinion_breakdown>[THIS.Char.GetBetrothed.GetOpinionBreakdownText(THIS.Char)]</opinion_breakdown><id>[THIS.Char.GetBetrothed.GetID]</id></char></betrothed>"
	}
	debug_log = "<spouses>"
	every_spouse = {
		limit = {
			not = {this =root.primary_partner}
		}
debug_log = "<char><name>[THIS.Char.GetNameNoTooltip]</name><gender>[THIS.Char.GetSheHe]</gender><age>[THIS.Char.GetAge]</age><health>[THIS.Char.GetHealth]</health><faith>[THIS.Char.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>[THIS.Char.GetPrimarySpouseOrBetrothed.IsValid]</marital_status><player_relation>[THIS.Char.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><selected_relation>[THIS.Char.GetRelationToStringExtended(PREV.Char)]</selected_relation><selected_opinion>[THIS.Char.GetOpinionOf(PREV.Char)]</selected_opinion><selected_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(PREV.Char)]</selected_opinion_breakdown><id>[THIS.Char.GetID]</id></char>"}
	debug_log = "</spouses>"
	debug_log = "<concubines>"
	every_concubine = {
debug_log = "<char><name>[THIS.Char.GetNameNoTooltip]</name><age>[THIS.Char.GetAge]</age><health>[THIS.Char.GetHealth]</health><faith>[THIS.Char.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>[THIS.Char.GetPrimarySpouseOrBetrothed.IsValid]</marital_status><relation>[THIS.Char.GetRelationToStringExtended(PREV.Char)]</relation><opinion>[THIS.Char.GetOpinionOf(PREV.Char)]</opinion><opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(PREV.Char)]</opinion_breakdown><id>[THIS.Char.GetID]</id></char>"}
	debug_log = "</concubines>"
	debug_log = "</consorts>"

	debug_log = "<heirs>"
	ordered_heir = {
	max = 100
#		order_by = position
debug_log = "<char><name>[THIS.Char.GetNameNoTooltip]</name><gender>[THIS.Char.GetSheHe]</gender><age>[THIS.Char.GetAge]</age><health>[THIS.Char.GetHealth]</health><faith>[THIS.Char.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>[THIS.Char.GetPrimarySpouseOrBetrothed.IsValid]</marital_status><player_relation>[THIS.Char.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><selected_relation>[THIS.Char.GetRelationToStringExtended(PREV.Char)]</selected_relation><selected_opinion>[THIS.Char.GetOpinionOf(PREV.Char)]</selected_opinion><selected_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(PREV.Char)]</selected_opinion_breakdown><id>[THIS.Char.GetID]</id></char>"
	check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max
	}
	debug_log = "</heirs>"

debug_log = "<lieges>"
		every_liege_or_above = {
debug_log = "<char><name>[THIS.Char.GetNameNoTooltip]</name><gender>[THIS.Char.GetSheHe]</gender><age>[THIS.Char.GetAge]</age><health>[THIS.Char.GetHealth]</health><faith>[THIS.Char.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>[THIS.Char.GetPrimarySpouseOrBetrothed.IsValid]</marital_status><player_relation>[THIS.Char.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><selected_relation>[THIS.Char.GetRelationToStringExtended(PREV.Char)]</selected_relation><selected_opinion>[THIS.Char.GetOpinionOf(PREV.Char)]</selected_opinion><selected_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(PREV.Char)]</selected_opinion_breakdown><id>[THIS.Char.GetID]</id></char>"
	}
debug_log = "</lieges>"
		debug_log = "<family>"
every_close_family_member = {
debug_log = "<char><name>[THIS.Char.GetNameNoTooltip]</name><gender>[THIS.Char.GetSheHe]</gender><age>[THIS.Char.GetAge]</age><health>[THIS.Char.GetHealth]</health><faith>[THIS.Char.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>[THIS.Char.GetPrimarySpouseOrBetrothed.IsValid]</marital_status><player_relation>[THIS.Char.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><selected_relation>[THIS.Char.GetRelationToStringExtended(PREV.Char)]</selected_relation><selected_opinion>[THIS.Char.GetOpinionOf(PREV.Char)]</selected_opinion><selected_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(PREV.Char)]</selected_opinion_breakdown><id>[THIS.Char.GetID]</id></char>"
	}
		debug_log = "</family>"
		debug_log = "<courtiers>"
every_courtier_or_guest = {
debug_log = "<char><name>[THIS.Char.GetNameNoTooltip]</name><gender>[THIS.Char.GetSheHe]</gender><age>[THIS.Char.GetAge]</age><health>[THIS.Char.GetHealth]</health><faith>[THIS.Char.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>[THIS.Char.GetPrimarySpouseOrBetrothed.IsValid]</marital_status><player_relation>[THIS.Char.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><selected_relation>[THIS.Char.GetRelationToStringExtended(PREV.Char)]</selected_relation><selected_opinion>[THIS.Char.GetOpinionOf(PREV.Char)]</selected_opinion><selected_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(PREV.Char)]</selected_opinion_breakdown><id>[THIS.Char.GetID]</id></char>"
	}
debug_log = "</courtiers>"
debug_log = "<vassals>"
every_vassal = {
debug_log = "<char><name>[THIS.Char.GetNameNoTooltip]</name><gender>[THIS.Char.GetSheHe]</gender><age>[THIS.Char.GetAge]</age><health>[THIS.Char.GetHealth]</health><faith>[THIS.Char.GetFaith.GetNameNoTooltip]</faith><religion>[THIS.Char.GetFaith.GetReligion.GetNameNoTooltip]</religion><culture>[THIS.Char.GetCulture.GetNameNoTooltip]</culture><culture_group>[THIS.Char.GetCulture.GetHeritage.GetNameNoTooltip]</culture_group><marital_status>[THIS.Char.GetPrimarySpouseOrBetrothed.IsValid]</marital_status><player_relation>[THIS.Char.GetRelationToStringExtended(GetPlayer)]</player_relation><player_opinion>[THIS.Char.GetOpinionOf(GetPlayer)]</player_opinion><player_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(GetPlayer)]</player_opinion_breakdown><selected_relation>[THIS.Char.GetRelationToStringExtended(PREV.Char)]</selected_relation><selected_opinion>[THIS.Char.GetOpinionOf(PREV.Char)]</selected_opinion><selected_opinion_breakdown>[THIS.Char.GetOpinionBreakdownText(PREV.Char)]</selected_opinion_breakdown><id>[THIS.Char.GetID]</id></char>"
	}
debug_log = "</vassals>"
debug_log = "</CharacterWindow>"

#debug_log = "<1out>[GetString_CVector2f(GetAbsoluteMousePosition)]</out>"

#debug_log = "<out>Hello World!</out>"

}
}